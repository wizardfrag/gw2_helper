name: Elixir CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    name: Build and Test on Elixir ${{matrix.elixir}} / OTP ${{matrix.otp}}
    strategy:
      matrix:
        otp: [25.x]
        elixir: [1.14.x]

    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_DB: gw2_helper_test
          POSTGRES_PASSWORD: gw2_helper
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      MIX_ENV: test
      DB_USER: postgres
      DB_PASS: gw2_helper
      DB_HOST: localhost

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{matrix.elixir}} # Define the elixir version [required]
          otp-version: ${{matrix.otp}} # Define the OTP version [required]

      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{matrix.elixir}}-${{matrix.otp}}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{matrix.elixir}}-${{matrix.otp}}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Check format
        run: |
          mix format --check-formatted
          mix compile --warnings-as-errors --force
          mix credo --strict

      - name: Coveralls
        run: mix coveralls.github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        run: mix test
